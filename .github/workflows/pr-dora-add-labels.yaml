name: DORA - PR Validation - Add Labels from Service Path

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  label-from-path:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get list of changed files
        id: changed
        run: |
          echo "files=$(git diff --name-only origin/main...HEAD | xargs)" >> "$GITHUB_OUTPUT"

      - name: Detect labels from service path
        id: detect
        run: |
          declare -A label_map

          # Itera sobre cada documento kind: Component
          yq e 'select(.kind == "Component")' catalog-info.yaml --tojson | jq -c '.' | while read -r doc; do
            name=$(echo "$doc" | jq -r '.metadata.name')
            paths=$(echo "$doc" | jq -r '.metadata.annotations["gupy.io/service-path"]')

            # Se tiver múltiplos paths separados por vírgula
            IFS=',' read -ra path_array <<< "$paths"
            for path in "${path_array[@]}"; do
              clean_path=$(echo "$path" | xargs)
              if [[ -n "$clean_path" ]]; then
                label_map["$clean_path"]="$name"
              fi
            done
          done

          echo "✅ Mapa de path -> label gerado:"
          for key in "${!label_map[@]}"; do
            echo "$key → ${label_map[$key]}"
          done

          changed_files=(${{ steps.changed.outputs.files }})
          declare -A labels

          # Verifica quais arquivos batem com quais paths
          for file in "${changed_files[@]}"; do
            for path in "${!label_map[@]}"; do
              if [[ "$file" == "$path"* ]]; then
                labels["${label_map[$path]}"]=1
              fi
            done
          done

          label_list=$(IFS=,; echo "${!labels[*]}")
          echo "labels=$label_list" >> "$GITHUB_OUTPUT"

      - name: Add labels to PR
        if: steps.detect.outputs.labels != ''
        uses: actions/github-script@v7
        with:
          script: |
            const labels = '${{ steps.detect.outputs.labels }}'.split(',');
            if (labels.length > 0) {
              console.log('✅ Adicionando labels:', labels);
              await github.rest.issues.addLabels({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: labels,
              });
            } else {
              console.log('ℹ️ Nenhuma label para adicionar.');
            }
