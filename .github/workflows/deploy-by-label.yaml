name: Trigger Deployments from Labels

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: read
  actions: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      labels: ${{ steps.set-labels.outputs.labels }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR labels from merged commit
        id: set-labels
        run: |
          COMMIT_SHA="${{ github.sha }}"
          echo "Looking for PRs merged into main at commit $COMMIT_SHA"

          PRS=$(curl -s -H "Authorization: Bearer ${{ secrets.GIT_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?state=closed&base=main&per_page=20")

          PR_NUMBER=$(echo "$PRS" | jq ".[] | select(.merge_commit_sha == \"$COMMIT_SHA\") | .number" | head -n1)

          if [[ -z "$PR_NUMBER" ]]; then
            echo "No PR found for commit $COMMIT_SHA"
            echo "labels=[]" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "Found PR: #$PR_NUMBER"

          LABELS=$(curl -s -H "Authorization: Bearer ${{ secrets.GIT_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/labels" | jq -r ".[].name")

          echo "Labels found on PR: $LABELS"

          # Formata labels como JSON array
          LABELS_JSON=$(echo "$LABELS" | jq -R -s -c 'split("\n") | map(select(. != ""))')
          echo "labels=$LABELS_JSON" >> "$GITHUB_OUTPUT"

  deploy:
    needs: prepare
    if: ${{ fromJson(needs.prepare.outputs.labels) != '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        label: ${{ fromJson(needs.prepare.outputs.labels) }}
    name: Deploy ${{ matrix.label }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy for ${{ matrix.label }}
        run: echo "Executando deploy para servi√ßo: ${{ matrix.label }}"
